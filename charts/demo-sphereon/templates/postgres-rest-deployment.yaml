kind: Deployment
apiVersion: apps/v1
metadata:
  name: demo-postgres-rest
  namespace: {{ $.Release.Namespace | quote }}
spec:
  selector:
    matchLabels:
      app.kubernetes.io/instance: demo-postgres-rest
      app.kubernetes.io/name: demo-postgres-rest
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: demo-postgres-rest
        app.kubernetes.io/name: demo-postgres-rest
    spec:
      containers:
        - name: postgres-rest
          image: postgrest/postgrest:v12.0.1
          command: ["postgrest"]
          env:
            - name: PGRST_DB_URI
              value: "postgres://postgres:password@postgresql:5432/postgres"
            - name: SERVICE_KEY
              value: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.ewogICJyb2xlIjogInNlcnZpY2Vfcm9sZSIsCiAgImlzcyI6ICJzdXBhYmFzZSIsCiAgImlhdCI6IDE3MTI3MDAwMDAsCiAgImV4cCI6IDE4NzA0NjY0MDAKfQ.O7XtSZwu68C7g-MBw0zlLBglmCnKj-7gbjsxbCCFGpU"
            - name: PGRST_DB_SCHEMAS
              value: "public,storage,graphql_public"
            - name: PGRST_DB_ANON_ROLE
              value: "anon"
            - name: PGRST_JWT_SECRET
              value: "qynpg8j8imxrzitlipvax3rkwutivhqugnpsw32hfffff"
            - name: PGRST_DB_USE_LEGACY_GUCS
              value: "false"
            - name: PGRST_APP_SETTINGS_JWT_SECRET
              value: "qynpg8j8imxrzitlipvax3rkwutivhqugnpsw32hfffff"
            - name: PGRST_APP_SETTINGS_JWT_EXP
              value: "3600"
          ports:
            - containerPort: 3000
              name: http-api