kind: Deployment
apiVersion: apps/v1
metadata:
  name: demo-walt-wallet-api
  namespace: {{ $.Release.Namespace | quote }}
spec:
  selector:
    matchLabels:
      app.kubernetes.io/instance: demo-walt-wallet-api
      app.kubernetes.io/name: demo-walt-wallet-api
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: demo-walt-wallet-api
        app.kubernetes.io/name: demo-walt-wallet-api
    spec:
      containers:
        - name: wallet-backend
          image: quay.io/wi_stefan/wallet-api:0.0.1-DSC
          imagePullPolicy: Always
          env:
            - name: WALTID_WALLET_API_OPTS
              value: "-Djavax.net.ssl.trustStore=/temp/custom-truststore.jks -Djavax.net.ssl.trustStorePassword=changeit -Dhttp.proxyHost=squid-proxy.infra.svc.cluster.local -Dhttp.proxyPort=8888 -Dhttps.proxyHost=squid-proxy.infra.svc.cluster.local -Dhttps.proxyPort=8888"
            - name: DATABASE_ENGINE
              value: "sqlite"
          volumeMounts:
            - name: walt-backend-config
              mountPath: "/waltid-wallet-api/config"
              readOnly: true
            - name: walt-backend-config
              mountPath: "/waltid-web-wallet/walt.yaml"
              subPath: "walt.yaml"
              readOnly: true
            - mountPath: "/data-sqlite"
              name: walt-backend-data
            - mountPath: "/temp"
              name: cacerts
          args:
            - run
          ports:
            - containerPort: 4545
              name: http-api
      volumes:
        - name: walt-backend-config
          configMap:
            name: demo-walt-wallet-api
        - name: walt-backend-data
          emptyDir: {}
        - name: cacerts
          secret:
            secretName: custom-ca