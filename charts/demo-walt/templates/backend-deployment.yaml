kind: Deployment
apiVersion: apps/v1
metadata:
  name: demo-walt-backend
  namespace: {{ $.Release.Namespace | quote }}
spec:
  selector:
    matchLabels:
      app.kubernetes.io/instance: demo-walt-backend
      app.kubernetes.io/name: demo-walt-backend
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: demo-walt-backend
        app.kubernetes.io/name: demo-walt-backend
    spec:
      containers:
        - name: wallet-backend
          image: waltid/wallet-api
          env:
            - name: WALTID_WALLET_API_OPTS
              value: "-Djavax.net.ssl.trustStore=/temp/cacerts -Djavax.net.ssl.trustStorePassword=changeit"
            - name: SQLITE_DB_DATA
              value: "/data-sqlite/data.db"
            - name: DB_NAME
              value: "waltid"
            - name: DB_USERNAME
              value: "waltid"
            - name: DB_PASSWORD
              value: "waltid"
            - name: WALLET_BACKEND_PORT
              value: "4545"
            - name: DEMO_WALLET_FRONTEND_PORT
              value: "4545"
            - name: DATABASE_ENGINE
              value: "sqlite"
          volumeMounts:
            - name: walt-backend-config
              mountPath: "/waltid-wallet-api/config"
              readOnly: true
            - name: walt-backend-config
              mountPath: "/waltid-web-wallet/walt.yaml"
              subPath: "walt.yaml"
              readOnly: true
            - mountPath: "/data-sqlite"
              name: walt-backend-data
            - mountPath: "/temp"
              name: cacerts
          args:
            - run
          ports:
            - containerPort: 4545
              name: http-api
      volumes:
        - name: walt-backend-config
          configMap:
            name: demo-walt-backend
        - name: walt-backend-data
          emptyDir: {}
        - name: cacerts
          configMap:
            name: cacerts
          