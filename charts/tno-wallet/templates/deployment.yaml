apiVersion: apps/v1
kind: Deployment
metadata:
  name: tsg-deployment
  namespace: {{ $.Release.Namespace | quote }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: tsg
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: tsg
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
      containers:
        - name: tsg
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: Always
          env:
            - name: SUBPATH
              value: ""
            {{- with concat .Values.env (fromYamlArray (list .Values.configFromSecrets "" | include "tsg.recurseSecretConfig"))}}
              {{- toYaml . | nindent 12 }}
            {{- end }}
          resources: {{ .Values.resources | toYaml | nindent 12 }}
          ports:
            - name: http
              containerPort: {{ .Values.config.server.port | default 3000 }}
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /health
              port: {{ .Values.config.server.port | default 3000 }}
          readinessProbe:
            httpGet:
              path: /health
              port: {{ .Values.config.server.port | default 3000 }}
          startupProbe:
            httpGet:
              path: /health
              port: {{ .Values.config.server.port | default 3000 }}
            initialDelaySeconds: 2
            periodSeconds: 2
            failureThreshold: 60
          volumeMounts:
          - name: tsg-config
            mountPath: "/app/config.yaml"
            subPath: "config.yaml"
          {{- if .Values.persistentVolume}}
          - name: tsg-pvc
          {{- with .Values.persistentVolume }}
            mountPath: {{ .mountPath }}
            {{- end }}
          {{- end }}
      volumes:
      - name: tsg-config
        configMap:
          name: tsg-config
      {{- if .Values.persistentVolume }}
      - name: tsg-pvc
        persistentVolumeClaim:
          claimName: tsg-pvc
      {{- end }}