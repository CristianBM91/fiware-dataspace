---
# Source: data-space-connector/charts/vcverifier/templates/deployment.yaml
kind: Deployment
apiVersion: apps/v1
metadata:
  name: verifier
  namespace: "provider"
  labels:
    
    app.kubernetes.io/name: vcverifier
    helm.sh/chart: vcverifier-4.1.2
    app.kubernetes.io/instance: provider
    app.kubernetes.io/version: "6.1.1"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  revisionHistoryLimit: 3
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  selector:
    matchLabels:
      app.kubernetes.io/name: vcverifier
      app.kubernetes.io/instance: provider
  template:
    metadata:
      labels:
        
        app.kubernetes.io/name: vcverifier
        helm.sh/chart: vcverifier-4.1.2
        app.kubernetes.io/instance: provider
        app.kubernetes.io/version: "6.1.1"
        app.kubernetes.io/managed-by: Helm
    spec: 
      serviceAccountName: default
      initContainers:
        - args:
          - -c
          - |
            #!/bin/sh
            cp /etc/ssl/cert.pem /root-ca/cert.pdata.typeem
            cat /root-ca/cacert.pem >> /root-ca/cert.pem
          command:
          - /bin/sh
          image: alpine:3.21.3
          name: add-root-ca
          volumeMounts:
          - mountPath: /root-ca
            name: root-ca
          - mountPath: /root-ca/cacert.pem
            name: ca-to-add
            subPath: cacert.pem
        - args:
          - -ec
          - |
            #!/bin/bash
            apt-get -y update; apt-get -y install wget; apt-get -y install gettext-base
            cd /did-material
            wget http://did-helper:3002/did-material/did.env
            export $(cat /did-material/did.env)
            cp /original-conf/server.yaml /alternative-conf/server.yaml
            envsubst < /alternative-conf/server.yaml
          command:
          - /bin/bash
          image: ubuntu
          name: get-did
          volumeMounts:
          - mountPath: /did-material
            name: did-material
          - mountPath: /original-conf
            name: config-volume
          - mountPath: /alternative-conf
            name: alternative-conf
        - args:
          - -ec
          - |
            #!/bin/bash
            source /did-material/did.env
            apt-get -y update; apt-get -y install curl
            curl -X 'POST' 'http://tir.trust-anchor.svc.cluster.local:8080/issuer' -H 'Content-Type: application/json' -d "{\"did\": \"${DID}\", \"credentials\": []}"
          command:
          - /bin/bash
          image: ubuntu
          name: register-at-tir
          volumeMounts:
          - mountPath: /did-material
            name: did-material
      containers:
        - name: vcverifier
          image: "quay.io/fiware/vcverifier:6.1.1"
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 3000
              name: backend
          env:
            - name: CONFIG_FILE
              value: /alternative-conf/server.yaml
            - name: HTTPS_PROXY
              value: http://squid-proxy.infra.svc.cluster.local:8888
            - name: HTTP_PROXY
              value: http://squid-proxy.infra.svc.cluster.local:8888
            - name: NO_PROXY
              value: credentials-config-service,w3.org,trusted-issuers-list
          livenessProbe:
            httpGet:
              path: /health
              port: backend
            initialDelaySeconds: 3
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 30
          readinessProbe:
            httpGet:
              path: /health
              port: backend
            initialDelaySeconds: 4
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 30
          resources:
            null
          ## workaround for missing db support
          volumeMounts:
            - mountPath: /configs/
              name: config-volume
            - mountPath: /alternative-conf
              name: alternative-conf
            - mountPath: /signing-key
              name: signing-key
            - mountPath: /certificate
              name: cert-chain
            - mountPath: /etc/ssl/cert.pem
              name: root-ca
              subPath: cert.pem
      volumes:
      - name: config-volume
        configMap:
          name: verifier
      - name: signing-key
        secret:
          secretName: signing-key
      - name: cert-chain
        secret:
          secretName: cert-chain
      - emptyDir: {}
        name: did-material
      - emptyDir: {}
        name: alternative-conf
      - emptyDir: {}
        name: root-ca
      - name: ca-to-add
        secret:
          secretName: root-ca
