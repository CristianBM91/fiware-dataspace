vcverifier:
  enabled: false
credentials-config-service:
  enabled: false
trusted-issuers-list:
  enabled: false
mysql:
  enabled: false
odrl-pap:
  enabled: false
apisix:
  enabled: false
scorpio:
  enabled: false
postgis:
  enabled: false
tm-forum-api:
  enabled: false
contract-management:
  enabled: false
postgresql:
  primary:
    persistence:
      enabled: false
  readReplicas:
    persistence:
      enabled: false
keycloak:
  ingress:
    enabled: true
    hostname: keycloak-consumer.127.0.0.1.nip.io
  command:
    - /bin/bash
  args:
    - -ec
    - |
      #!/bin/sh
      export $(cat /did-material/did.env)
      export KC_HOSTNAME=keycloak-consumer.127.0.0.1.nip.io
      /opt/bitnami/scripts/keycloak/entrypoint.sh
      /opt/bitnami/scripts/keycloak/run.sh
  initContainers:
    - name: register-at-tir
      image: ubuntu
      command:
        - /bin/bash
      args:
        - -ec
        - |
          #!/bin/bash
          apt-get -y update; apt-get -y install curl
          curl -X 'POST' 'http://tir.trust-anchor.svc.cluster.local:8080/issuer' -H 'Content-Type: application/json' -d "{\"did\": \"did:web:consumer.127.0.0.1.nip.io\", \"credentials\": []}"
      volumeMounts:
        - name: did-material
          mountPath: /did-material
    - name: register-at-til
      image: quay.io/curl/curl:8.1.2
      command:
        - /bin/sh
      args:
        - -ec
        - |
          #!/bin/sh
          /bin/init.sh
      volumeMounts:
        - name: consumer-til-registration
          mountPath: /bin/init.sh
          subPath: init.sh
        - name: did-material
          mountPath: /did-material
  extraVolumeMounts:
    - name: did-material
      mountPath: /did-material
    - name: did-material
      mountPath: "/etc/env"
      readOnly: true
    - name: consumer-key
      mountPath: "/keys"
    - name: realms
      mountPath: /opt/bitnami/keycloak/data/import
  extraVolumes:
    - name: did-material
      emptyDir: {}
    - name: realms
      configMap:
        name: test-realm-realm
    - name: consumer-til-registration
      configMap:
        name: consumer-til-registration
        defaultMode: 0755
    - name: consumer-key
      configMap:
        name: consumer-keystore
        defaultMode: 0755
  signingKey:
    storePath: /keys/cert.jks
    storePassword: password
    keyAlias: certificate
    keyPassword: password
    did: did:web:consumer.127.0.0.1.nip.io
    keyAlgorithm: RS256
  realm:
    frontendUrl: http://keycloak-consumer.127.0.0.1.nip.io:8080
    import: true
    name: test-realm
    clientRoles: |
      "${CLIENT_DID}": [
        {
          "name": "READER",
          "description": "Is allowed to see offers etc.",
          "clientRole": true
        },
        {
          "name": "OPERATOR",
          "description": "Is allowed to operate clusters.",
          "clientRole": true
        }
      ]
    users: |
      {
        "username": "test-user",
        "enabled": true,
        "email": "test@user.org",
        "firstName": "Test",
        "lastName": "Reader",
        "credentials": [
          {
            "type": "password",
            "value": "test"
          }
        ],
        "clientRoles": {
          "${CLIENT_DID}": [
            "OPERATOR"
          ],
          "account": [
            "view-profile",
            "manage-account"
          ]
        },
        "groups": [
        ]
      }
    clients: |
      {
        "clientId": "${CLIENT_DID}",
        "enabled": true,
        "description": "Client to connect test.org",
        "surrogateAuthRequired": false,
        "alwaysDisplayInConsole": false,
        "clientAuthenticatorType": "client-secret",
        "defaultRoles": [],
        "redirectUris": [],
        "webOrigins": [],
        "notBefore": 0,
        "bearerOnly": false,
        "consentRequired": false,
        "standardFlowEnabled": true,
        "implicitFlowEnabled": false,
        "directAccessGrantsEnabled": false,
        "serviceAccountsEnabled": false,
        "publicClient": false,
        "frontchannelLogout": false,
        "protocol": "oid4vc",
        "attributes": {
          "client.secret.creation.time": "1675260539",
          "vc.user-credential.format": "jwt_vc",
          "vc.user-credential.scope": "UserCredential",
          "vc.verifiable-credential.format": "jwt_vc",
          "vc.verifiable-credential.scope": "VerifiableCredential",
          "vc.operator-credential.format": "jwt_vc",
          "vc.operator-credential.scope": "OperatorCredential"
        },
        "protocolMappers": [
          {
            "name": "target-role-mapper",
            "protocol": "oid4vc",
            "protocolMapper": "oid4vc-target-role-mapper",
            "config": {
              "subjectProperty": "roles",
              "clientId": "${CLIENT_DID}",
              "supportedCredentialTypes": "OperatorCredential"
            }
          },
          {
            "name": "context-mapper",
            "protocol": "oid4vc",
            "protocolMapper": "oid4vc-context-mapper",
            "config": {
              "context": "https://www.w3.org/2018/credentials/v1",
              "supportedCredentialTypes": "VerifiableCredential,UserCredential,OperatorCredential"
            }
          },
          {
            "name": "email-mapper",
            "protocol": "oid4vc",
            "protocolMapper": "oid4vc-user-attribute-mapper",
            "config": {
              "subjectProperty": "email",
              "userAttribute": "email",
              "supportedCredentialTypes": "UserCredential,OperatorCredential"
            }
          },
          {
            "name": "firstName-mapper",
            "protocol": "oid4vc",
            "protocolMapper": "oid4vc-user-attribute-mapper",
            "config": {
              "subjectProperty": "firstName",
              "userAttribute": "firstName",
              "supportedCredentialTypes": "UserCredential,OperatorCredential"
            }
          },
          {
            "name": "subject-mapper",
            "protocol": "oid4vc",
            "protocolMapper": "oid4vc-static-claim-mapper",
            "config": {
              "subjectProperty": "subject",
              "staticValue": "did:key:zDnaeiVpxCT7ARwqLndbWiCeGG2YZXvLfWFs1cGPgKUe8GPLe",
              "supportedCredentialTypes": "OperatorCredential"
            }
          },
          {
            "name": "lastName-mapper",
            "protocol": "oid4vc",
            "protocolMapper": "oid4vc-user-attribute-mapper",
            "config": {
              "subjectProperty": "lastName",
              "userAttribute": "lastName",
              "supportedCredentialTypes": "UserCredential,OperatorCredential"
            }
          }
        ],
        "authenticationFlowBindingOverrides": {},
        "fullScopeAllowed": true,
        "nodeReRegistrationTimeout": -1,
        "defaultClientScopes": [],
        "optionalClientScopes": []
      }
did:
  enabled: true
  secret: issuance-secret
  serviceType: ClusterIP
  port: 3001
  cert:
    country: BE
    state: BRUSSELS
    locality: Brussels
    organization: Fancy Marketplace Co.
    commonName: www.fancy-marketplace.biz
  ingress:
    enabled: true
    host: did-consumer.127.0.0.1.nip.io
# register the consumer at the til. Only possible if it runs in the same environment and recommendable for demo deployments
registration:
  enabled: true
  configMap: consumer-til-registration
  til: http://trusted-issuers-list.provider.svc.cluster.local:8080
  did: did:web:consumer.127.0.0.1.nip.io
  credentialsType: UserCredential
didJson:
  enabled: true
  port: 3000
  did: did:web:consumer.127.0.0.1.nip.io
  key:
    kty: RSA
    x5u: https://consumer.127.0.0.1.nip.io/.well-known/tls.crt
    modulus: iehhaS8vz1XF9ejBEAOPzx56emC5N697ojz-cC2Gj-TNE7xw_lk0HmyXlrpYo1xmXmxUZ4vmcB6TwenmeZoyyykq1R4OHEL8ixDQuqjCH5DSi1EnebmcrzUqI43tjXr8j4nQFvc3pkb6dvibVhXzdEFY1sWXLaiz7cYFB775hcMJFxlyM_bBIYurN-DfDWFwg12Q9f4wEZ2MvVWPOh_sdGm6K8abFCf2Ds9LtlhIGmrXuNf8-_9-1GUtgmuwqMpNiiXNV1JgC2TSJK3Wq4_GnQu9_vNMeioiuQm50iGJzZf5uowfLuEGgQWQsU8GX-zrpdNiEH3bLmib8t--LSub94rC11hIBPQUauNVXyIOzcaNChUlfx0CNrXYMJhXEjQrDOkFQSbouPKUC04Dk5qBkLE0ps7j96MWgPmpCwpdAULOxglMQvMaZZem4IOtiSWkcTHqPX1-FvcwR_d7T0TsauolngUAfWDfgvHI38Fu6KlrIORWwqXpIab2rg2a_lwzKMn9ex4aU7aRYeLYlC4uXgA0ldtNTf0xYXKlCX8ESFpvJ6160zmgyOUFjFulx1qtS5vZ_B3KdSQLIWH-7etsQU9lb3gj0-0pWgPSbbXsY-7Kk96o_x1OWhDTGIzOzlykN0FJ9tHhKLQOCgwR55jspeVMl751hLDIcbTFedsbaAk
    exponent: AQAB
  ingress:
    enabled: true
    host: consumer.127.0.0.1.nip.io
