keycloak:
  enabled: false

apisix:
  image:
    debug: true
  dataPlane:
    ingress:
      enabled: true
      hostname: mp-data-service.127.0.0.1.nip.io
      extraHosts:
        - name: mp-tmf-api.127.0.0.1.nip.io
          path: /
        - name: tpp-data-service.127.0.0.1.nip.io
          path: /
        - name: tpp-service.127.0.0.1.nip.io
          path: /
  catchAllRoute:
    enabled: false
  routes: |-
    - uri: /.well-known/openid-configuration
      host: mp-data-service.127.0.0.1.nip.io
      upstream:
        nodes:
          verifier:3000: 1
        type: roundrobin
      plugins:
        proxy-rewrite:
          uri: /services/data-service/.well-known/openid-configuration
    - uri: /.well-known/openid-configuration
      host: tpp-service.127.0.0.1.nip.io
      upstream:
        nodes:
          verifier:3000: 1
        type: roundrobin
      plugins:
        proxy-rewrite:
          uri: /services/tpp-service/.well-known/openid-configuration
    - uri: /.well-known/data-space-configuration
      upstream:
        nodes:
          dsconfig:3002: 1
        type: roundrobin
      plugins:
        proxy-rewrite:
          uri: /.well-known/data-space-configuration/data-space-configuration.json
        response-rewrite:
          headers:
            set:
              content-type: application/json
    - uri: /*
      host: tpp-data-service.127.0.0.1.nip.io
      upstream:
        nodes:
          data-service-scorpio:9090: 1
        type: roundrobin
      plugins:
        openid-connect:
          bearer_only: true
          use_jwks: true
          client_id: contract-management
          client_secret: unused
          ssl_verify: false
          discovery: http://verifier:3000/services/tmf-api/.well-known/openid-configuration
        opa:
          host: "http://localhost:8181"
          policy: tpp
    - uri: /*
      host: mp-data-service.127.0.0.1.nip.io
      upstream:
        nodes:
          data-service-scorpio:9090: 1
        type: roundrobin
      plugins:
        openid-connect:
          bearer_only: true
          use_jwks: true
          client_id: data-service
          client_secret: unused
          ssl_verify: false
          discovery: http://verifier:3000/services/data-service/.well-known/openid-configuration
        opa:
          host: "http://localhost:8181"
          policy: policy/main
          with_body: true
    - uri: /.well-known/openid-configuration
      host: mp-tmf-api.127.0.0.1.nip.io
      upstream:
        nodes:
          verifier:3000: 1
        type: roundrobin
      plugins:
        proxy-rewrite:
          uri: /services/tmf-api/.well-known/openid-configuration
    - uri: /api/v1/catalogs
      host: tpp-catalog-service.127.0.0.1.nip.io
      upstream:
        nodes:
          rainbow:8080: 1
    - uri: /*
      host: tpp-service.127.0.0.1.nip.io
      upstream:
        nodes:
          rainbow:8080: 1
      plugins:
        openid-connect:
          bearer_only: true
          use_jwks: true
          client_id: data-service
          client_secret: unused
          ssl_verify: false
          discovery: http://verifier:3000/services/data-service/.well-known/openid-configuration
        opa:
          host: "http://localhost:8181"
          policy: policy/main
          with_body: true
    - uri: /*
      host: mp-tmf-api.127.0.0.1.nip.io
      upstream:
        nodes:
          tm-forum-api:8080: 1
        type: roundrobin
      plugins:
        openid-connect:
          bearer_only: true
          use_jwks: true
          client_id: contract-management
          client_secret: unused
          ssl_verify: false
          discovery: http://verifier:3000/services/tmf-api/.well-known/openid-configuration
        opa:
          host: "http://localhost:8181"
          policy: policy/main
          with_body: true

credentials-config-service:
  ingress:
    enabled: true
    hosts:
      - host: provider-ccs.127.0.0.1.nip.io
        paths:
          - "/"

vcverifier:
  ingress:
    enabled: true
    annotations:
      traefik.ingress.kubernetes.io/router.tls: "true"
    hosts:
      - host: provider-verifier.io
        paths:
          - "/"
  deployment:
    image:
      repository: quay.io/wi_stefan/vcverifier
      tag: 10.0.0
      pullPolicy: Always
    logging:
      level: DEBUG
    verifier:
      tirAddress: http://tir.127.0.0.1.nip.io:8080/
      did: ${DID}
      supportedModes: ["byValue","byReference"]
      clientIdentification:
        keyPath: /signing-key/client.key.pem
        requestKeyAlgorithm: ES256
        id: x509_san_dns:provider-verifier.io
        certificatePath: /certificate/client-chain-bundle.cert.pem
    server:
      host: https://provider-verifier.io
    configRepo:
      configEndpoint: http://credentials-config-service:8080
    alternativeConfig: /alternative-conf/server.yaml
    additionalVolumes:
      - name: signing-key
        secret:
          secretName: signing-key
      - name: cert-chain
        secret:
          secretName: cert-chain
      - name: did-material
        emptyDir: {}
      - name: alternative-conf
        emptyDir: {}
      # add the self generated root ca to the system truststore
      - name: root-ca
        emptyDir: {}
      - name: ca-to-add
        secret:
          secretName: root-ca
    additionalVolumeMounts:
      - name: alternative-conf
        mountPath: /alternative-conf
      - name: signing-key
        mountPath: /signing-key
      - name: cert-chain
        mountPath: /certificate
      # add the self generated root ca to the system truststore
      - name: root-ca
        mountPath: /etc/ssl/cert.pem
        subPath: cert.pem
    additionalEnvVars:
      - name: HTTPS_PROXY
        value: "http://squid-proxy.infra.svc.cluster.local:8888"
      - name: HTTP_PROXY
        value: "http://squid-proxy.infra.svc.cluster.local:8888"
      - name: NO_PROXY
        value: "credentials-config-service,w3.org,trusted-issuers-list"
    initContainers:
      # add the self generated root ca to the system truststore
      - name: add-root-ca
        image: alpine:3.21.3
        command:
          - /bin/sh
        args:
          - -c
          - |
            #!/bin/sh
            cp /etc/ssl/cert.pem /root-ca/cert.pem
            cat /root-ca/cacert.pem >> /root-ca/cert.pem
        volumeMounts:
          - name: root-ca
            mountPath: /root-ca
          - name: ca-to-add
            mountPath: /root-ca/cacert.pem
            subPath: cacert.pem
      - name: get-did
        image: ubuntu
        command:
          - /bin/bash
        args:
          - -ec
          - |
            #!/bin/bash
            apt-get -y update; apt-get -y install wget; apt-get -y install gettext-base
            cd /did-material
            wget http://did-helper:3002/did-material/did.env
            export $(cat /did-material/did.env)
            cp /original-conf/server.yaml /alternative-conf/server.yaml
            envsubst < /alternative-conf/server.yaml
        volumeMounts:
          - name: did-material
            mountPath: /did-material
          - name: config-volume
            mountPath: /original-conf
          - name: alternative-conf
            mountPath: /alternative-conf

      - name: register-at-tir
        image: ubuntu
        command:
          - /bin/bash
        args:
          - -ec
          - |
            #!/bin/bash
            source /did-material/did.env
            apt-get -y update; apt-get -y install curl
            curl -X 'POST' 'http://tir.trust-anchor.svc.cluster.local:8080/issuer' -H 'Content-Type: application/json' -d "{\"did\": \"${DID}\", \"credentials\": []}"
        volumeMounts:
          - name: did-material
            mountPath: /did-material

mysql:
  primary:
    persistence:
      enabled: false
  secondary:
    persistence:
      enabled: false

postgis:
  primary:
    persistence:
      enabled: false
  readReplicas:
    persistence:
      enabled: false

postgresql:
  primary:
    persistence:
      enabled: false
  readReplicas:
    persistence:
      enabled: false

did:
  enabled: true
  secret: issuance-secret
  serviceType: ClusterIP
  port: 3002
  cert:
    country: DE
    state: SAXONY
    locality: Dresden
    organization: M&P Operations Inc.
    commonName: www.mp-operation.org
  ingress:
    enabled: true
    host: did-provider.127.0.0.1.nip.io

dataSpaceConfig:
  enabled: true
  serviceType: ClusterIP
  port: 3002
  supportedModels:
    - "https://raw.githubusercontent.com/smart-data-models/dataModel.Consumption/master/ConsumptionPoint/schema.json"
    - "https://raw.githubusercontent.com/smart-data-models/dataModel.Consumption/master/ConsumptionCost/schema.json"
  supportedProtocols:
    - http
    - https
  authenticationProtocols:
    - oid4vp

scorpio:
  ingress:
    enabled: true
    # only to make it available for the test initialization
    hosts:
    - host: scorpio-provider.127.0.0.1.nip.io
      paths:
        - "/"
  ccs:
    id: did:key:zDnaeypyWjzn54GuUP7PmDXiiggCyiG7ksMF7Unm7kjtEKBez
    defaultOidcScope:
      name: "openid learcredential"
    oidcScopes:
      "openid learcredential":
        credentials:
          - type: LegalPersonCredential
            trustedParticipantsLists:
              - http://tir.127.0.0.1.nip.io:8080
            trustedIssuersLists:
              - http://trusted-issuers-list:8080
            jwtInclusion:
              enabled: true
              fullInclusion: true
        presentationDefinition:
          id: pd
          input_descriptors:
            - id: descriptor
              constraints: 
                fields:
                  - id: vct
                    path:
                      - $.vct
                    filter:
                      const: "LegalPersonCredential"
                  - id: subject
                    path:
                      - $.firstName
              format:
                "vc+sd-jwt": 
                  alg: 
                    - ES256
          format:
            "vc+sd-jwt": 
              alg: 
                - ES256
      operator:
        credentials:
          - type: OperatorCredential
            trustedParticipantsLists:
              - http://tir.127.0.0.1.nip.io:8080
            trustedIssuersLists:
              - http://trusted-issuers-list:8080
        presentationDefinition:
          id: pd
          input_descriptors:
            - id: descriptor
              constraints: 
                fields:
                  - id: field
                    path:
                      - $.credentialSubject.firstName
          format:
            "vc+sd-jwt": 
              alg: 
                - ES256


odrl-pap:
  deployment:
    initContainers:
      - name: get-did
        image: ubuntu
        command:
          - /bin/bash
        args:
          - -ec
          - |
            #!/bin/bash
            apt-get -y update; apt-get -y install wget
            cd /did-material
            wget http://did-helper:3002/did-material/did.env
        volumeMounts:
          - name: did-material
            mountPath: /did-material
    additionalVolumes:
      - name: did-material
        emptyDir: {}
    additionalVolumeMounts:
      - name: did-material
        mountPath: /did-material
    command:
      - /bin/sh
    args:
      - -ec
      - |
        #!/bin/sh
        source /did-material/did.env
        export GENERAL_ORGANIZATION_DID=$DID
        ./application -Dquarkus.http.host=0.0.0.0

  ingress:
    enabled: true
    hosts:
      - host: pap-provider.127.0.0.1.nip.io
        paths:
          - "/"

tm-forum-api:
  registration:
    ccs:
      defaultOidcScope:
        credentialType: LegalPersonCredential
        trustedParticipantsLists: http://tir.trust-anchor.svc.cluster.local:8080

  ingress:
    enabled: true
    hosts:
      - host: tm-forum-api.127.0.0.1.nip.io
        paths:
          - /

# -- integration of rainbow
rainbow:
  enabled: true
  db:
    url: postgresql
    user: postgres
    existingSecret: database-secret
    passwordKey: postgres-admin-password
  ingress:
    enabled: true
    host: rainbow-provider.127.0.0.1.nip.io
  ccs:
    enabled: true 
    defaultOidcScope:
      name: default
    oidcScopes:
      default:
        - type: OperatorCredential
          trustedParticipantsLists:
            - http://tir.trust-anchor.svc.cluster.local:8080
          trustedIssuersLists:
            - http://trusted-issuers-list:8080

tpp:
  enabled: true
  transfers:
    host: http://rainbow-provider.127.0.0.1.nip.io:8080
    path: transfers

contract-management:
  til:
    credentialType: OperatorCredential
  services:
    ## Config for Trusted Issuers List
    trusted-issuers-list:
      ## URL of the Trusted Issuers List Service
      url: http://trusted-issuers-list:8080
    ## Config for the TM Forum Service hosting the APIs
    product-order:
      ## URL of the TM Forum Service hosting the Product Ordering API
      url: http://provider-tm-forum-api-product-ordering-management:8080
    party:
      ## URL of the TM Forum Service hosting the Party API
      url: http://provider-tm-forum-api-party-catalog:8080
    product-catalog:
      ## URL of the TM Forum Service hosting the Product Catalog API
      url: http://provider-tm-forum-api-product-catalog:8080
    service-catalog:
      ## URL of the TM Forum Service hosting the Service Catalog API
      url: http://provider-tm-forum-api-service-catalog:8080
    tmforum-agreement-api:
      ## URL of the TM Forum Service hosting the Agreement API
      url: http://provider-tm-forum-api-agreement:8080
    quote:
      ## URL for TM Forum Service hosting the Quote API
      url: http://provider-tm-forum-api-quote:8080
    rainbow:
      ## URL for the Rainbow service
      url: http://rainbow:8080

trusted-issuers-list:
  # only open for clean up in the tests
  ingress:
    til:
      enabled: true
      hosts:
        - host: til-provider.127.0.0.1.nip.io
          paths:
            - /

marketplace:
  siop:
    clientId: did:key:zDnaeypyWjzn54GuUP7PmDXiiggCyiG7ksMF7Unm7kjtEKBez
    verifier:
      host: https://provider-verifier.io
      callbackURL: https://provider-verifier.io/auth/vc/callback
  externalUrl: https://marketplace.127.0.0.1.nip.io

  bizEcosystemApis:
    tmForum:
      catalog:
        host: provider-tm-forum-api-product-catalog
        port: 8080/tmf-api/productCatalogManagement/v4
        path:
      inventory:
        host: provider-tm-forum-api-product-inventory
        port: 8080/tmf-api/productInventory/v4
        path: 
      ordering:
        host: provider-tm-forum-api-product-ordering-management
        port: 8080/tmf-api/productOrderingManagement/v4
        path: 
      billing:
        host: provider-tm-forum-api-customer-bill-management
        port: 8080/tmf-api/customerBillManagement/v4
        path: 
      usage:
        host: provider-tm-forum-api-usage-management
        port: 8080/tmf-api/usageManagement/v4
        path: 
      party:
        host: provider-tm-forum-api-party-catalog
        port: 8080/tmf-api/party/v4
        path: 
      customer:
        host: provider-tm-forum-api-customer-management
        port: 8080/tmf-api/customerManagement/v4
        path: 
      resources:
        host: provider-tm-forum-api-resource-catalog
        port: 8080/tmf-api/resourceCatalog/v4
        path: 
      services:
        host: provider-tm-forum-api-service-catalog
        port: 8080/tmf-api/serviceCatalogManagement/v4
        path: 
      resourceInventory:
        host: provider-tm-forum-api-resource-inventory
        port: 8080/tmf-api/resourceInventoryManagement/v4
        path: 

  bizEcosystemLogicProxy:
    

    ingress: 
      enabled: true
      annotations:
        traefik.ingress.kubernetes.io/router.tls: "true"
      hosts: 
        - host: marketplace.127.0.0.1.nip.io
          paths: 
            - "/"
    additionalEnvVars:
      - name: BAE_LP_SIOP_IS_REDIRECTION
        value: "true"
      - name: BAE_LP_PURCHASE_ENABLED
        value: "true"
      - name: BAE_LP_MONGO_PASS
        valueFrom:
          secretKeyRef:
            name: marketplace-secret-env
            key: MONGO_BAE_BELP_PW
      - name: BAE_LP_SIOP_PRIVATE_KEY
        valueFrom:
          secretKeyRef:
            name: bae-did-secret
            key: privateKey
      - name: NODE_TLS_REJECT_UNAUTHORIZED
        value: "0"
      - name: HTTPS_PROXY
        value: "http://squid-proxy.infra.svc.cluster.local:8888"